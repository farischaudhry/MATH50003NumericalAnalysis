**Numerical Analysis MATH50003 (2023–24) Problem Sheet 3**

**Problem 1** With 8-bit unsigned integers, what is the result for the following computations:
$$
127 ⊕_{256} 200,\quad 2 ⊗_{256} 127,\quad 2 ⊗_{256} 128, \quad0 ⊖_{256} 1
$$

**SOLUTION**
$$
127 ⊕_{256} 200 = 327\ ({\rm mod} 256) = 71
$$
$$
2 ⊗_{256} 127 = 254
$$
$$
2 ⊗_{256} 128 = 256 \ ({\rm mod} 256) = 0
$$
$$
0 ⊖_{256} 1 = -1  \ ({\rm mod} 256) = 255.
$$



**END**

**Problem 2(a)** With 8-bit signed integers, what are the bits for the following: $10, 120, -10$.

**SOLUTION**
We can find the binary digits by repeatedly subtracting the largest power of 2 less than a number
until we reach 0, e.g. $10 - 2^3 - 2 = 0$
implies $10 = (1010)_2$.
Thus the bits are:
```julia
using ColorBitstring
printlnbits(Int8(10))
```
Similarly,
$$
120 = 2^6 + 2^5 + 2^4 + 2^3 = (1111000)_2
$$
Thus the bits are (meant to be deduced by hand but we use Julia to confirm):
```julia
printlnbits(Int8(120))
```
For negative numbers we perform the same trick but adding $2^p$ to make it positive, e.g.,
$$
-10 = 2^8 - 10 ({\rm mod 2^8}) = 246 = 2^7 + 2^6 + 2^5 + 2^4 + 2^2 + 2 = (11110110)_2
$$
This the bits are:
```julia
printlnbits(Int8(-10))
```
**END**

**Problem 2(b)** With 8-bit signed integers, what is the result for the following computations:
$$
127 ⊕_{256}^{\rm s} 200,\quad 2 ⊗_{256}^{\rm s} 127, \quad 2 ⊗_{256}^{\rm s} 128, \quad 0 ⊖_{256}^{\rm s} 1
$$

**SOLUTION**
$$
127 ⊕_{256}^{\rm s} 200 = 327\ ({\rm mod}^{\rm s} 256) = 71
$$
$$
2 ⊗_{256}^{\rm s} 127 = 254\ ({\rm mod}^{\rm s} 256) = -2
$$

(The third part was a trick question: 128 cannot be represented as an 8-bit signed integer)

$$
0 ⊖_{256}^{\rm s} 1 = -1  \ ({\rm mod} 256)^{\rm s} = -1.
$$

**END**


**Problem 3** What is $π$ to 5 binary places? Hint: recall that $π ≈ 3.14$.

**SOLUTION**
Note that
```julia
3 + 1/8  + 1/64
```
which has the binary representation $(11.001001)_2$.
Indeed:
```julia
printbits(Float16(π))
```
Instead of simply guessing the above representation we can instead continuously subtract the largest powers 2 which do not result in a negative number. For $\pi$ the procedure then finds that we can write
$$
\pi - 1*2^1 - 1*2^0 - 1*2^{-3} - 1*2^{-6} ...
$$
**END**

**Problem 4** What are the single precision $F_{32} = F_{127,8,23}$ floating point representations for the following: 
$$
2, \quad 31, \quad 32, \quad 23/4, \quad (23/4)\times 2^{100}
$$

**SOLUTION**
Recall that we have `σ,Q,S = 127,8,23`. Thus we write
$$
2 = 2^{128-127} * (1.00000000000000000000000)_2
$$
The exponent bits are those of
$$
128 = 2^7 = (10000000)_2
$$
Hence we get
```julia
printlnbits(2f0)
```
We write
$$
31 = (11111)_2 = 2^{131-127} * (1.1111)_2
$$
And note that $131 = (10000011)_2$ Hence we have:
```julia
printlnbits(31f0)
```
On the other hand,
$$
32 = (100000)_2 = 2^{132-127}
$$
and $132 = (10000100)_2$ hence:
```julia
printlnbits(32f0)
```
Note that
$$
23/4 = 2^{-2} * (10111)_2 = 2^{129-127} * (1.0111)_2
$$
and $129 = (10000001)_2$ hence we get:
```julia
printlnbits(23f0/4)
```
Finally,
$$
23/4 * 2^{100} = 2^{229-127} * (1.0111)_2
$$
and $229 = (11100101)_2$ giving us:
```julia
printlnbits(23f0/4 * 2f0^100)
```
**END**


**Problem 5** Let $m(y) = \min\{x \in F_{32} : x > y \}$ be the smallest single precision number
greater than $y$. What is $m(2) - 2$ and $m(1024) - 1024$? 

**SOLUTION**
The next float after $2$ is $2 * (1 + 2^{-23})$ hence we get $m(2) - 2 = 2^{-22}$:
```julia
nextfloat(2f0) - 2, 2^(-22)
```
similarly, for $1024 = 2^{10}$ we find that the difference $m(1024) - 1024$ is $2^{10-23} = 2^{-13}$:
```julia
 nextfloat(1024f0) - 1024, 2^(-13)
```
**END**
